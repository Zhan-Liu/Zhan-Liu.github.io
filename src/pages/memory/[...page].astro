---
import type { Post, Page } from "@interfaces/data";
import PostCard from "@components/PostCard.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import Pagination from "@components/widgets/Pagination.astro";
import CardGroup from "@components/temple/CardGroup.astro";
import { Icon } from "astro-icon/components";
import { t } from "@config";
import { generatePageLinks } from "@utils/memoryUtils";
import { getMainBlogPaginationPaths } from "@utils/paginationUtils";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  return getMainBlogPaginationPaths({ paginate });
}

const { page }: { page: Page } = Astro.props;

const totalPages = Math.ceil(page.total / page.size);
const pageLinks = generatePageLinks(totalPages);
---

<BaseLayout title="Memory">
  <!-- Blog Navigation Cards -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    <!-- Archives Card -->
    <a
      href="/memory/archives"
      class="card bg-base-100 shadow-lg hover:shadow-xl transition-transform duration-300 ease-in-out hover:-translate-y-1"
    >
      <div class="card-body p-4">
        <div class="flex items-center gap-3">
          <div class="rounded-full bg-accent/10 p-3">
            <Icon name="lucide:archive" class="w-6 h-6 text-accent" />
          </div>
          <div>
            <h2 class="card-title text-lg">{t("label.archivePage")}</h2>
            <p class="text-sm opacity-75">{t("label.archivesPageDescription")}</p>
          </div>
        </div>
      </div>
    </a>

    <!-- Categories Card -->
    <a
      href="/memory/categories"
      class="card bg-base-100 shadow-lg hover:shadow-xl transition-transform duration-300 ease-in-out hover:-translate-y-1"
    >
      <div class="card-body p-4">
        <div class="flex items-center gap-3">
          <div class="rounded-full bg-primary/10 p-3">
            <Icon name="lucide:folder" class="w-6 h-6 text-primary" />
          </div>
          <div>
            <h2 class="card-title text-lg">{t("label.categoryPage")}</h2>
            <p class="text-sm opacity-75">{t("label.categoriesPageDescription")}</p>
          </div>
        </div>
      </div>
    </a>

    <!-- Tags Card -->
    <a
      href="/memory/tags"
      class="card bg-base-100 shadow-lg hover:shadow-xl transition-transform duration-300 ease-in-out hover:-translate-y-1"
    >
      <div class="card-body p-4">
        <div class="flex items-center gap-3">
          <div class="rounded-full bg-secondary/10 p-3">
            <Icon name="lucide:tag" class="w-6 h-6 text-secondary" />
          </div>
          <div>
            <h2 class="card-title text-lg">{t("label.tagPage")}</h2>
            <p class="text-sm opacity-75">{t("label.tagsPageDescription")}</p>
          </div>
        </div>
      </div>
    </a>

    <!-- Search Card -->
    <a
      href="/memory/search"
      class="card bg-base-100 shadow-lg hover:shadow-xl transition-transform duration-300 ease-in-out hover:-translate-y-1"
    >
      <div class="card-body p-4">
        <div class="flex items-center gap-3">
          <div class="rounded-full bg-info/10 p-3">
            <Icon name="lucide:search" class="w-6 h-6 text-info" />
          </div>
          <div>
            <h2 class="card-title text-lg">{t("label.searchPage")}</h2>
            <p class="text-sm opacity-75">{t("label.searchPageDescription")}</p>
          </div>
        </div>
      </div>
    </a>
  </div>

  <!-- Blog Post List -->
  <CardGroup cols="1" gap="6">
    {
      page.data.map((memory: Post) => (
        <PostCard
          title={memory.data.title}
          image={memory.data.image}
          description={memory.data.description}
          url={"/memory/" + memory.slug}
          pubDate={memory.data.pubDate}
          badge={memory.data.badge}
          categories={memory.data.categories}
          tags={memory.data.tags}
          word={memory.remarkPluginFrontmatter.totalCharCount}
          time={memory.remarkPluginFrontmatter.readingTime}
        />
      ))
    }
  </CardGroup>
  <Pagination page={page} totalPages={totalPages} pageLinks={pageLinks} baseUrl={`/memory`} />
</BaseLayout>
